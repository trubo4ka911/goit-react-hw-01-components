{"version":3,"sources":["App.styled.js","components/social/Socials.styled.js","components/social/SocialProfil.js","components/statistics/Statistics.styled.js","components/statistics/statisticsListItem.js","components/statistics/statisticsList.js","components/statistics/statistics.js","components/friends/Friends.styled.js","components/friends/FriendListItem.js","components/friends/friends.js","components/transactions/Transactions.styled.js","components/transactions/TransactionItem.js","components/transactions/transactions.js","App.js","index.js"],"names":["Container","styled","body","ProfileUser","div","Avatar","img","Stats","ul","StatsList","li","Profile","username","avatar","tag","location","stats","src","alt","className","followers","views","likes","StatList","StatItem","StatData","span","StatTitle","h2","StatisticListItem","id","label","percentage","StatisticsList","title","items","map","item","Statistics","FriendsList","FriendsItem","FriendsStatus","FriendsAvatar","StatusGreen","StatusRed","FriendlistItem","isOnline","name","width","FriendList","TransactionTable","table","TransactionTheadTh","th","TransactionTbodyTd","td","TransactionTbodyTr","tr","TransactionsItem","type","amount","currency","TransactionList","App","user","data","friends","Transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e74951de.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.body`\r\n  margin: 0;\r\n  color: #757575;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ProfileUser = styled.div`\r\n  display: block;\r\n  width: 200px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 19px;\r\n  letter-spacing: 0.03em;\r\n  text-align: center;\r\n  box-shadow: 0 2px 1px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%),\r\n    0 1px 3px rgb(0 0 0 / 12%);\r\n  padding-bottom: 24px;\r\n  margin: 20px auto;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  width: 150px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const Stats = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nexport const StatsList = styled.li`\r\n  list-style-type: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\nimport { ProfileUser, Avatar, Stats, StatsList } from \"./Socials.styled\";\n\nconst Profile = ({ username, avatar, tag, location, stats }) => {\n  return (\n    <ProfileUser>\n      <div>\n        <Avatar src={avatar} alt={username} />\n        <p>{username}</p>\n        <p>{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <Stats>\n        <StatsList>\n          <span className=\"label\">Followers: </span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </StatsList>\n        <StatsList>\n          <span className=\"label\">Views: </span>\n          <span className=\"quantity\">{stats.views}</span>\n        </StatsList>\n        <StatsList>\n          <span className=\"label\">Likes: </span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </StatsList>\n      </Stats>\n    </ProfileUser>\n  );\n};\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: {\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  },\n};\n\nexport default Profile;\n// ReactDOM.render(\n//   <Profile\n//     username={user.username}\n//     tag={user.tag}\n//     location={user.location}\n//     avatar={user.avatar}\n//     stats={user.stats}\n//   />,\n//   document.querySelector(\"#root\")\n// );\n\n//ReactDOM.render(<Profile />, document.querySelector(\"#root\"));\n\n// import user from 'путь/к/user.json;\n\n// {\n/* <Profile\n  username={user.username}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n/> */\n// }\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StatList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const StatItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n  width: 200px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 19px;\r\n  letter-spacing: 0.03em;\r\n  text-align: center;\r\n  box-shadow: 0 2px 1px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%),\r\n    0 1px 3px rgb(0 0 0 / 12%);\r\n  padding-bottom: 24px;\r\n  margin: 20px 0 30px 20px;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const StatData = styled.span`\r\n  margin-bottom: 10px;\r\n`;\r\nexport const StatTitle = styled.h2`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`;\r\n","import PropTypes from \"prop-types\";\nimport { StatItem, StatData } from \"./Statistics.styled\";\n\nconst StatisticListItem = ({ id, label, percentage }) => {\n  return (\n    <StatItem key={id}>\n      <StatData>{label}</StatData>\n      <span>{percentage} %</span>\n    </StatItem>\n  );\n};\n\nStatisticListItem.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  percentage: PropTypes.number,\n};\nexport default StatisticListItem;\n","import PropTypes from \"prop-types\";\nimport { StatTitle, StatList } from \"./Statistics.styled\";\nimport StatisticListItem from \"./statisticsListItem\";\n\nconst StatisticsList = ({ title, items }) => {\n  return (\n    <div>\n      {title && <StatTitle>{title}</StatTitle>}\n      <StatList>\n        {items.map((item) => (\n          <StatisticListItem\n            key={item.id}\n            label={item.label}\n            percentage={item.percentage}\n          />\n        ))}\n      </StatList>\n    </div>\n  );\n};\n\nStatisticsList.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nexport default StatisticsList;\n","import StatisticsList from \"./statisticsList\";\nimport { StatTitle } from \"./Statistics.styled\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section>\n      {title && <StatTitle>{title}</StatTitle>}\n      <StatisticsList items={stats} />\n    </section>\n  );\n};\nexport default Statistics;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FriendsList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0;\r\n`;\r\n\r\nexport const FriendsItem = styled.li`\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 200px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 19px;\r\n  letter-spacing: 0.03em;\r\n  text-align: center;\r\n  box-shadow: 0 2px 1px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%),\r\n    0 1px 3px rgb(0 0 0 / 12%);\r\n  padding-bottom: 24px;\r\n  margin: 20px 0 30px 20px;\r\n  list-style-type: none;\r\n`;\r\nexport const FriendsStatus = styled.span`\r\n  margin-bottom: 10px;\r\n`;\r\nexport const FriendsAvatar = styled.img`\r\n  width: 150px;\r\n  margin: auto;\r\n`;\r\nexport const StatusGreen = styled.div`\r\n  margin-left: 20px;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: rgba(11, 192, 72, 0.568);\r\n`;\r\nexport const StatusRed = styled.div`\r\n  margin-left: 20px;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: rgba(218, 18, 18, 0.753);\r\n`;\r\n","import PropTypes from \"prop-types\";\nimport {\n  FriendsAvatar,\n  FriendsItem,\n  FriendsStatus,\n  StatusGreen,\n  StatusRed,\n} from \"./Friends.styled\";\nconst FriendlistItem = ({ id, isOnline, avatar, name }) => {\n  return (\n    <FriendsItem key={id}>\n      <FriendsStatus>\n        {isOnline === true ? (\n          <StatusGreen></StatusGreen>\n        ) : (\n          <StatusRed> </StatusRed>\n        )}\n      </FriendsStatus>\n      <FriendsAvatar src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </FriendsItem>\n  );\n};\nFriendlistItem.propTypes = {\n  id: PropTypes.number,\n  isOnline: PropTypes.bool,\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n};\nexport default FriendlistItem;\n","import PropTypes from \"prop-types\";\nimport { FriendsList } from \"./Friends.styled\";\nimport FriendlistItem from \"./FriendListItem\";\n\nconst FriendList = ({ items }) => {\n  return (\n    <FriendsList>\n      {items.map((item) => (\n        <FriendlistItem\n          key={item.id}\n          isOnline={item.isOnline}\n          avatar={item.avatar}\n          name={item.name}\n        />\n      ))}\n    </FriendsList>\n  );\n};\nFriendList.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default FriendList;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const TransactionTable = styled.table`\r\n  width: 100%;\r\n  border: none;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TransactionTheadTh = styled.th`\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  background: #d8d8d8;\r\n  font-size: 14px;\r\n  border: 1px solid #ddd;\r\n  border-top: none;\r\n  border-bottom: none;\r\n  &: first-child {\r\n    border-left: none;\r\n  }\r\n  :last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport const TransactionTbodyTd = styled.td`\r\n  text-align: center;\r\n  border-left: 1px solid #ddd;\r\n  border-right: 1px solid #ddd;\r\n  padding: 10px 15px;\r\n  font-size: 14px;\r\n  vertical-align: top;\r\n  &: first-child {\r\n    border-left: none;\r\n  }\r\n  :last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\nexport const TransactionTbodyTr = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f3f3f3;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\nimport { TransactionTbodyTd, TransactionTbodyTr } from \"./Transactions.styled\";\n\nconst TransactionsItem = ({ id, type, amount, currency }) => {\n  return (\n    <TransactionTbodyTr key={id}>\n      <TransactionTbodyTd>{type}</TransactionTbodyTd>\n      <TransactionTbodyTd>{amount}</TransactionTbodyTd>\n      <TransactionTbodyTd>{currency}</TransactionTbodyTd>\n    </TransactionTbodyTr>\n  );\n};\nTransactionsItem.propTypes = {\n  id: PropTypes.number,\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\nexport default TransactionsItem;\n","import PropTypes from \"prop-types\";\nimport { TransactionTable, TransactionTheadTh } from \"./Transactions.styled\";\nimport TransactionsItem from \"./TransactionItem\";\n\nconst TransactionList = ({ items }) => {\n  return (\n    <TransactionTable>\n      <thead>\n        <tr>\n          <TransactionTheadTh>Type</TransactionTheadTh>\n          <TransactionTheadTh>Amount</TransactionTheadTh>\n          <TransactionTheadTh>Currency</TransactionTheadTh>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => (\n          <TransactionsItem\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </TransactionTable>\n  );\n};\nTransactionList.propTypes = {\n  items: PropTypes.array,\n};\nexport default TransactionList;\n","import user from \"./data/user.json\";\nimport data from \"./data/data.json\";\nimport friends from \"./data/friends.json\";\nimport Transactions from \"./data/transactions.json\";\n\nimport { Container } from \"./App.styled\";\n\nimport Profile from \"./components/social/SocialProfil\";\nimport Statistics from \"./components/statistics/statistics\";\nimport FriendList from \"./components/friends/friends\";\nimport TransactionHistory from \"./components/transactions/transactions\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList items={friends} />\n      <TransactionHistory items={Transactions} />;\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}